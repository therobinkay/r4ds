midwest <- midwest %>%
mutate(percminor = (1 - (popadults / poptotal)) * 100)
midwest %>%
group_by(county) %>%
summarise(mean_percminor = mean(percminor)) %>%
arrange(desc(mean_percminor)) %>%
head(5)
midwest %>%
arrange(desc(percminor)) %>%
select(county, percminor) %>%
head(5)
midwest <- midwest %>%
mutate(lvminor = ifelse(percminor >= 40, "large",
ifelse(percminor >= 30, "middle", "small"))) %>%
group_by(lvminor) %>%
summarise(n = n())
midwest
midwest = as.data.frame(ggplot2::midwest)
midwest %>%
mutate(lvminor = ifelse(percminor >= 40, "large",
ifelse(percminor >= 30, "middle", "small"))) %>%
group_by(lvminor) %>%
summarise(n = n())
midwest <- midwest %>%
mutate(percminor = (1 - (popadults / poptotal)) * 100)
midwest %>%
mutate(lvminor = ifelse(percminor >= 40, "large",
ifelse(percminor >= 30, "middle", "small"))) %>%
group_by(lvminor) %>%
summarise(n = n())
midwest <- midwest %>%
mutate(lvminor = ifelse(percminor >= 40, "large",
ifelse(percminor >= 30, "middle", "small")))
midwest
midwest %>%
mutate(ratio_asian = (1 - (popasian / poptotal)) * 100) %>%
arrange(ratio_asian) %>%
select(state, county, ratio_asian) %>%
head(10)
midwest %>%
mutate(ratio_asian = popasian / poptotal * 100) %>%
arrange(ratio_asian) %>%
select(state, county, ratio_asian) %>%
head(10)
rm(list = ls())
df = data.frame(sex = c("M", "F", NA, "M", "F"),
score = c(5, 4, 3, 4, NA))
df
is.na(df)
table(is.na(df))
table(is.na(df$sex))
mean(df$score)
df %>% filter(is.na(score))
df %>% filter(!is.na(score))
df_nomiss <- df %>% filter(!is.na(score))
df_nomiss
mean(df_nomiss$score)
sum(df_nomiss$score)
df_nomiss <- df %>% filter(!is.na(score) & !is.na(sex))
df_nomiss
df_nomiss2 <- na.omit(df)
df_nomiss2
df_nomiss == df_nomiss2
mean(df$score, na.rm = T)
exam <- read.csv("csv_exam.csv")
exam
exam[c(3, 8, 15), "math"] <- NA
exam
exam %>% summarise(mean_math = mean(math))
exam %>% summarise(mean_math = mean(math, na.rm = T))
exam$math <- ifelse(is.na(exam$math), mean(exam$math, na.rm = T), exam$math)
table(is.na(exam$math))
mpg <- as.data.frame(ggplot2::mpg)
mpg[c(65, 124, 131, 153, 212), "hwy"] <- NA
is.na(mpg %>% select(drv, hwy))
table(is.na(mpg %>% select(drv, hwy)))
table(is.na(mpg$drv))
table(is.na(mpg$hwy))
mpg %>%
filter(!is.na(hwy)) %>%
group_by(drv) %>%
summarise(mean = mean(hwy))
boxplot(mpg$hwy)
boxplot(mpg$hwy)$stats
mpg$hwy <- ifelse(mpg$hwy < 12 | mpg$hwy > 37, NA, mpg$hwy)
table(is.na(mpg$hwy))
mpg %>%
group_by(drv) %>%
summarise(mean_hwy = mean(hwy, na.rm = T))
mpg <- as.data.frame(ggplot2::mpg)
mpg[c(10, 14, 58, 93), "drv"] <- "k"
mpg[c(29, 43, 129, 203), "cty"] <- c(3, 4, 39, 42)
table(mpg$drv)
mpg$drv <- ifelse(mpg$drv == "k", NA, mpg$drv)
table(mpg$drv)
boxplot(mpg$cty)
boxplot(mpg$cty)$stats
mpg$cty <- ifelse(mpg$cty < 9 | mpg$cty > 26, NA, mpg$cty)
boxplot(mpg$cty)
mpg %>%
filter(!is.na(drv) & !is.na(cty)) %>%
group_by(drv) %>%
summarise(mean_cty = mean(cty))
rm(list = ls())
mpg <- as.data.frame(ggplot2::mpg)
ggplot(mpg, aes(x = cty, y = hwy)) +
geom_point()
mw <- as.data.frame(ggplot2::midwest)
ggplot(mw, aes(x = poptotal, y = popasian)) +
geom_point() +
xlim(0, 500000) +
ylim(0, 10000)
df_mpg <- mpg %>%
group_by(drv) %>%
summarise(mean_hwy = mean(hwy))
df_mpg
ggplot(df_mpg, aes(x = drv, y = mean_hwy)) +
geom_col()
ggplot(df_mpg, aes(x = reorder(drv, -mean_hwy), y = mean_hwy)) +
geom_col()
ggplot(df_mpg, aes(x = reorder(drv, mean_hwy), y = mean_hwy)) +
geom_col()
ggplot(df_mpg, aes(x = reorder(drv, -mean_hwy), y = mean_hwy)) +
geom_col()
ggplot(mpg, aes(x = drv)) + geom_bar()
ggplot(mpg, aes(x = hwy)) + geom_bar()
ggplot(mpg %>%
filter(class == "suv") %>%
group_by(manufacturer) %>%
summarise(mean_cty = mean(cty)), aes(x = manufacturer, y = mean_cty)) +
geom_col()
ggplot(mpg %>%
filter(class == "suv") %>%
group_by(manufacturer) %>%
summarise(mean_cty = mean(cty)), aes(x = reorder(manufacturer, -mean_cty), y = mean_cty)) +
geom_col()
ggplot(mpg %>%
filter(class == "suv") %>%
group_by(manufacturer) %>%
summarise(mean_cty = mean(cty) %>%
arrange(desc(mean_city)) %>%
head(5)), aes(x = reorder(manufacturer, -mean_cty), y = mean_cty)) +
geom_col()
ggplot(mpg %>%
filter(class == "suv") %>%
group_by(manufacturer) %>%
summarise(mean_cty = mean(cty)) %>%
arrange(desc(mean_city)) %>%
head(5), aes(x = reorder(manufacturer, -mean_cty), y = mean_cty)) +
geom_col()
ggplot(mpg %>%
filter(class == "suv") %>%
group_by(manufacturer) %>%
summarise(mean_cty = mean(cty)) %>%
arrange(desc(mean_cty)) %>%
head(5), aes(x = reorder(manufacturer, -mean_cty), y = mean_cty)) +
geom_col()
ggplot(mpg, aes(x = class)) +
geom_bar()
economics <- as.data.frame(ggplot2::economics)
economics %>% head(5)
ggplot(economics, aes(x = date, y =unemploy)) +
geom_line()
ggplot(economics, aes(x = date, y = psavert)) +
geom_line()
ggplot(mpg, aes(x = drv, y = hwy)) +
geom_boxplot()
ggplot(mpg %>%
filter(class %in% c("compact", "subcompact", "suv")), aes(x = class, y = cty)) +
geom_boxplot()
rm(list = ls())
install.packages("foreign")
library(foreign)
library(dplyr)
library(ggplot2)
library(readxl)
raw_welfare <- read.spss(file = "Koweps_hpc10_2015_beta1.sav",
to.data.frame = T)
welfare <- raw_welfare
View(welfare)
head(welfare)
dim(welfare)
str(welfare)
summary(welfare)
welfare <- rename(welfare,
sex = h10_g3,
birth = h10_g4,
marriage = h10_g10,
religion = h10_g11,
income = p1002_8aq1,
code_job = h10_eco9,
code_region = h10_reg7)
class(welfare$sex)
table(welfare$sex)
welfare$sex <- ifelse(welfare$sex == 1, "male", "female")
table(welfare$sex)
qplot(welfare$sex)
summary(welfare$income)
qplot(welfare$income)
qplot(welfare$income) + xlim(0, 1000)
welfare$income <- ifelse(welfare$income %in% c(0, 9999), NA, welfare$income)
table(is.na(welfare$income))
sex_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(sex) %>%
summarise(mean_income = mean(income))
sex_income
options()
options(digits = 4)
sex_income
options(digits = 7)
sex_income
pi
options(pillar.sigfig = 7)
sex_income
ggplot(sex_income, aes(x = sex, y = mean_income)) +
geom_col()
class(welfare$birth)
table(welfare$birth)
summary(welfare$birth)
qplot(welfare$birth)
welfare$age = 2015 - welfare$birth + 1
summary(welfare$age)
qplot(welfare$age)
age_income <- welfare %>%
group_by(age) %>%
summarise(mean_income = mean(income))
age_income
age_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(age) %>%
summarise(mean_income = mean(income))
age_income
ggplot(age_income, aes(x=age, y=mean_income)) +
geom_col()
ggplot(age_income, aes(x=age, y=mean_income)) +
geom_line()
welfare <- welfare %>%
mutate(ageg = ifelse(age < 30, "young",
ifelse(age <= 59, "middle", "old")))
table(welfare$ageg)
qplot(welfare$ageg)
ageg_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(ageg) %>%
summarise(mean_income = mean(income))
ggplot(ageg_income, aes(x = ageg, y = mean_income)) +
geom_col()
ggplot(ageg_income, aes(x = ageg, y = mean_income)) +
geom_col() +
scale_x_discrete(limits = c("young", "middle", "old"))
sex_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(ageg, sex) %>%
summarise(mean_income = mean(income))
sex_income
ggplot(sex_income, aes(x = ageg, y = mean_income, fill = sex)) +
geom_col() +
scale_x_discrete(limit = c("young", "middle", "old"))
ggplot(sex_income, aes(x = ageg, y = mean_income, fill = sex)) +
geom_col(position = "dodge") +
scale_x_discrete(limit = c("young", "middle", "old"))
sex_age <- welfare %>%
filter(!is.na(income)) %>%
group_by(sex, age) %>%
summarise(mean_income = mean(income))
sex_age
ggplot(sex_age, aes(x = age, y = mean_income, col = sex)) +
geom_line()
ggplot(sex_age, aes(x = age, y = mean_income, fill = sex)) +
geom_line()
ggplot(sex_age, aes(x = age, y = mean_income, col = sex)) +
geom_line()
table(welfare$code_job)
summary(welfare$code_job)
list_job <- read_excel("Koweps_Codebook.xlsx", col_names = T, sheet = 2)
head(list_job)
dim(list_job)
welfare <- left_join(welfare, list_job, id = "code_job")
welfare$job %>% head(5)
welfare$job
welfare %>%
filter(!is.na(code_job)) %>%
select(code_job, job) %>%
head(10)
job_income <- welfare %>%
filter(!is.na(income) & !is.na(job)) %>%
group_by(job) %>%
summarise(mean_income = mean(income))
head(job_income)
top10 <- job_income %>%
arrange(desc(mean_income)) %>%
head(10)
top10
ggplot(top10, aes(x = reorder(job, -mean_income), y = mean_income)) +
geom_col()
ggplot(top10, aes(x = reorder(job, -mean_income), y = mean_income)) +
geom_col() +
coord_flip()
ggplot(top10, aes(x = reorder(job, mean_income), y = mean_income)) +
geom_col() +
coord_flip()
job_male <- welfare %>%
filter(sex == "male" & !is.na(job)) %>%
group_by(job) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(10)
job_male
job_female <- welfare %>%
filter(sex == "female" & !is.na(job)) %>%
group_by(job) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(10)
job_female
ggplot(job_male, aes(x = reorder(job, n), y = n)) +
geom_col() +
coord_flip()
ggplot(job_female, aes(x = reorder(job, n), y = n)) +
geom_col() +
coord_flip()
summary(welfare$religion)
welfare$religion <- ifelse(welfare$religion == 1, "yes" ,"no")
table(welfare$religion)
qplot(welfare$religion)
summary(welfare$marriage)
qplot(welfare$marriage)
table(welfare$marriage)
welfare$group_marriage <- ifelse(welfare$marriage == 1, "married",
ifelse(welfare$marriage == 3, "divorced", NA))
table(welfare$group_marriage)
qplot(welfare$group_marriage)
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(religion, group_marriage) %>%
summarise(n = n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n / tot_group * 100, 1))
religion_marriage
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
count(religion, group_marriage) %>%
group_by(religion) %>%
mutate(pct = round(n/sum(n)*100, 1))
religion_marriage
divorce <- religion_marriage %>%
filter(group_marriage == "divorced") %>%
select(religion, pct)
divorce
ggplot(divorce, aes(x=religion, y=pct)) +
geom_col()
ageg_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
count(ageg, group_marriage) %>%
group_by(ageg) %>%
mutate(pct = round(n/sum(n)*100, 1))
ageg_marriage
ageg_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
count(ageg, group_marriage) %>%
group_by(group_marriage) %>%
mutate(pct = round(n/sum(n)*100, 1))
ageg_marriage
ageg_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
count(ageg, group_marriage) %>%
group_by(ageg) %>%
mutate(pct = round(n/sum(n)*100, 1))
ageg_marriage
ageg_divorce <- ageg_marriage %>%
filter(ageg %in% c("middle", "old") & group_marriage == "divorced") %>%
select(ageg, pct)
ageg_divorce
ggplot(ageg_divorce, aes(x=ageg, y=pct)) +
geom_col()
ageg_religion_marriage <- welfare %>%
filter(!is.na(group_marriage) & ageg != "young") %>%
count(ageg, religion, group_marriage) %>%
group_by(ageg, religion) %>%
mutate(pct = round(n/sum(n)*100, 1))
ageg_religion_marriage
df_divorce <- ageg_religion_marriage %>%
filter(group_marriage == "divorced") %>%
select(ageg, religion, pct)
df_divorce
ggplot(df_divorce, aes(x = ageg, y = pct, fill = religion)) +
geom_col()
ggplot(df_divorce, aes(x = ageg, y = pct, fill = religion)) +
geom_col(position = "dodge")
table(welfare$code_region)
list_region <- data.frame(code_region = c(1:7),
region = c("Seoul",
"Incheon/Gyeonggi",
"Busan/Gyeongnam/Ulsan",
"Daegu/Gyeongbuk",
"Daejeon/Chungnam",
"Gangwon/Chungbuk",
"Gwangju/Jeonnam/Jeonbuk/Jeju"))
list_region
welfare <- left_join(welfare, list_region, id="code_region")
welfare %>%
select(code_region, region) %>%
head
region_ageg <- welfare %>%
count(ageg, region) %>%
group_by(region) %>%
mutate(pct = round(n/sum(n)*100, 1))
region_ageg
region_ageg <- welfare %>%
count(ageg, region) %>%
group_by(region) %>%
mutate(pct = round(n/sum(n)*100, 2))
region_ageg
region_ageg %>% print(n=21)
region_ageg %>%
arrange(region, ageg)
region_ageg %>%
arrange(region, ageg) %>%
print(21)
region_ageg %>%
arrange(region, ageg) %>%
print(n =21)
ggplot(region_ageg, aes(x=region, y=pct, fill=ageg)) +
geom_col(position = "dodge") +
coord_flip()
ggplot(region_ageg, aes(x=region, y=pct, fill=ageg)) +
geom_col() +
coord_flip()
list_order_old <- region_ageg %>%
filter(ageg == "old") %>%
arrange(pct)
order <- list_order_old$region
order
ggplot(region_ageg, aes(x=region, y=pct, fill=ageg)) +
geom_col() +
coord_flip() +
scale_x_discrete(limits = order)
region_ageg$ageg = factor(region_ageg$ageg,
level = c("old", "middle", "young"))
level(region_ageg$ageg)
levels(region_ageg$ageg)
ggplot(region_ageg, aes(x=region, y=pct, fill=ageg)) +
geom_col() +
coord_flip() +
scale_x_discrete(limits = order)
rm(list = ls())
install.packages("plotly")
library(plotly)
library(ggplot2)
p <- ggplot(mpg, aes(x = displ, y = hwy, col = drv)) +
geom_point()
ggplotly(p)
p <- ggplot(diamonds, aes(x = cut, fill = clarity)) +
geom_bar(position = "dodge")
ggplotly(p)
install.packages("dygraphs")
library(dygraphs)
economics <- ggplot2::economics
head(economics)
library(xts)
library(xts)
eco <- xts(economics$unemploy, order.by = economics$date)
head(eco)
dygraph(eco)
dygraph(eco) %>% dyRangeSelector()
eco_a <- xts(economics$psavert, order.by = economics$date)
eco_b <- xts(economics$unemploy/1000, order.by = economics$date)
eco2 <- cbind(eco_a, eco_b)
colnames(eco2) <- c("psavert", "unemploy")
head(eco2)
dygraph(eco2) %>% dyRangeSelector()
mpg <- as.data.frame(ggplot2::mpg)
mpg_diff <- mpg %>%
select(class, cty) %>%
filter(class %in% c("compact", "suv"))
head(mpg_diff)
table(mpg_diff$class)
t.test(mpg_diff, cty ~ class, var.equal = T)
t.test(data = mpg_diff, cty ~ class, var.equal = T)
mpg_diff2 <- mpg %>%
select(fl, cty) %>%
filter(fl %in% c("r", "p"))
table(mpg_diff2$fl)
t.test(data = mpg_diff2, cty ~ fl, var.equal = T)
cor,test(economics$unemploy, economics$pce)
cor.test(economics$unemploy, economics$pce)
economics <- as.data.frame(ggplot2::economics)
cor.test(economics$unemploy, economics$pce)
head(mtcars)
car_cor <- cor(mtcars)
round(car_cor, 2)
install.packages("corrplot")
library(corrplot)
corrplot(car_cor)
corrplot(car_cor, method = :number)
corrplot(car_cor, method = "number")
exam <- read.csv("csv_exam.csv")
exam[]
exam[1,]
exam[exam$class == 1,]
exam[,1]
exam[, "math"]
exam[,c("class", "math", "english")]
mpg$tot <- (mpg$cty + mpg$hwy)/2
aggregate(data = mpg[mpg$class == "compact" | mpg$class == "suv",] tot~class, mean)
aggregate(data = mpg[mpg$class == "compact" | mpg$class == "suv",], tot~class, mean)
class(mpg$drv)
mpg$drv <- as.factor(mpg$drv)
class(mpg$drv)
levels(mpg$drv)
boxplot(mpg$cty)$stats[,1]
